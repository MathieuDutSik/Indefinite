#!/usr/bin/perl -w

use Cwd;
$TheDirPWD = getcwd;

@ListProg=("sv_exact", "POLY_ComputeEngelSymbol", "GRP_VectorSplitting", "SHORT_GetShortVector", "POLY_FaceLatticeDirect", "IndefiniteReduction", "GRP_ListMat_Subset_EXT_Automorphism", "GRP_ListMat_Subset_EXT_Isomorphism", "GRP_ListMat_Subset_EXT_Invariant", "POLY_IsomorphismReduction");


$TargetDir = "ExternalProg/polyhedral_common/polyhedral_common/selected_binaries/"

$nbProg=0;
$nbCompiled=0;
foreach (@ListProg)
{
    $eProg=$TargetDir.$_;
    if (-e $eProg)
    {
	$nbCompiled++;
    }
    $nbProg++;
}
if ($nbProg ne $nbCompiled)
{
    $PrefixGMP=$TheDirPWD."/ExternalProg/gmp_install";
    $PrefixLD="LDFLAGS=\"-L".$PrefixGMP."/lib\"";
    $PrefixINC="CPPFLAGS=\"-I".$PrefixGMP."/include\"";
    #
    $order="(cd ExternalProg/polyhedral_common && git clone --recursive https://github.com/MathieuDutSik/polyhedral_common.git)";
    print $order."\n";
    if (system($order) != 0) {
	die "Error when extracting the tar archive\n";
    }
    #
    $order="(cd ExternalProg/polyhedral_common/polyhedral_common && ./make_selected_binaries)";
    print $order."\n";
    if (system($order) != 0) {
	die "Error when compiling sv\n";
    }
}
foreach(@ListProg)
{
    $eProg=$TargetDir.$_;
    if (not(-e $eProg))
    {
	print "eProg=".$eProg."\n";
	print "Compilation failed\n";
	exit -1;
    }
    #
    $order="(cd ExternalProg/Binaries && ln -sf ../polyhedral_common/polyhedral_common/selected_binaries/".$_.")";
    print $order."\n";
    if (system($order) != 0) {
	die "Error when linking\n";
    }
}
print "\nCOMPILED polyhedral_common\n\n";

exit 0;
